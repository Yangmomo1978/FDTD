#!/usr/bin/env python
from subprocess import call

call("clear", shell="True")

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

FC = "gfortran "

#Debugging
CFLAGS = "-Wall -Wextra -Wimplicit-interface -fPIC -fmax-errors=1 -c -g -fcheck=all -fbacktrace "

#Optimized
#CFLAGS = "-Wall -Wextra -Wimplicit-interface -fPIC -Werror -fmax-errors=1 -c -O3 -march=native -ffast-math -funroll-loops"

LFLAGS = "-Wall -g "

EXE = "FDTD"

OBJS = "bin/main.o bin/FDTD_Constants.o bin/Grid.o bin/TFSF.o bin/FDTD.o bin/PrintField.o bin/CPML.o " 
SRC = ["FDTD_Constants", "Grid", "TFSF", "FDTD", "PrintField", "CPML", "main"]

error = 'Error'
nerror = True
nerrorTot = True

def Compile(inFile):
    global nerrorTot
    BIN = "-o bin/" + inFile + ".o "
    SRC = "src/" + inFile + ".f90 "
    
    if(inFile == "main"):
        SRC = "main.f90 "
    
    call(FC + CFLAGS + SRC + BIN + " 2> log.txt", shell="True")
    
    nerror = True

    log = open('log.txt')

    for line in log:
        if(error in line): 
            nerror = False
            nerrorTot = False 
       
    if(nerror):
        print(bcolors.BOLD + inFile + ".f90: " + bcolors.OKGREEN + "SUCCESS" + bcolors.ENDC)
    else:
        print(bcolors.BOLD + inFile + ".f90: " + bcolors.FAIL + "FAILURE" + bcolors.ENDC) 
        call("cat log.txt >> error.txt", shell="True")

for src in SRC:
    Compile(src)

#########################
#   Make Final Executable
#########################
BIN = OBJS

nerror = True

if(nerrorTot):
    call(FC + LFLAGS + BIN + "-o " + EXE + " 2> log.txt", shell="True")
else:
    nerror = False
log = open('log.txt')

lerror = 'error'
for line in log:
    if(lerror in line): 
        nerror = False
        nerrorTot = False
if(nerror):
    print(bcolors.BOLD + "Linking: " + bcolors.OKGREEN + "SUCCESS" + bcolors.ENDC)
else:
    print(bcolors.BOLD + "Linking: " + bcolors.FAIL + "FAILURE" + bcolors.ENDC) 
    call("cat log.txt >> error.txt", shell="True")

#Clean-up
call("rm *.mod", shell="True")
call("rm log.txt", shell="True")

finalErr = 'Fatal Error'

if(nerrorTot):
    print(bcolors.BOLD + bcolors.OKGREEN + "Successful build" + bcolors.ENDC)  
else:
    errorlog = open("error.txt")
    for line in errorlog:    
        print(bcolors.BOLD + bcolors.FAIL + line + bcolors.ENDC)
        if(finalErr in line):
            break
    call("rm error.txt", shell="True")
    print(bcolors.BOLD + bcolors.FAIL + "Build Failed" + bcolors.ENDC)












